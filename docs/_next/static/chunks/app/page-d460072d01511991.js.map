{"version":3,"file":"static/chunks/app/page-d460072d01511991.js","mappings":"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","sources":["webpack://_N_E/?8b02","webpack://_N_E/./src/components/Card.tsx","webpack://_N_E/./src/components/resume/AboutMe.tsx","webpack://_N_E/./src/components/Layout.tsx","webpack://_N_E/./src/components/P.tsx","webpack://_N_E/./src/components/resume/Organization.tsx","webpack://_N_E/./src/lib/util.ts","webpack://_N_E/./src/components/resume/JobDetail.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/dpsouth/devel/davidsouther/resume/node_modules/next/dist/client/link.js\");\nimport(/* webpackMode: \"eager\" */ \"/Users/dpsouth/devel/davidsouther/resume/src/components/Card.tsx\");\nimport(/* webpackMode: \"eager\" */ \"/Users/dpsouth/devel/davidsouther/resume/src/components/Layout.tsx\");\nimport(/* webpackMode: \"eager\" */ \"/Users/dpsouth/devel/davidsouther/resume/src/components/resume/JobDetail.tsx\");\nimport(/* webpackMode: \"eager\" */ \"/Users/dpsouth/devel/davidsouther/resume/src/components/P.tsx\")","\"use client\";\nimport { ReactNode } from \"react\";\n\nexport const Card = ({\n  className = \"\",\n  header,\n  children,\n  footer,\n}: {\n  className?: string;\n  header?: ReactNode;\n  children: ReactNode;\n  footer?: ReactNode;\n}) => (\n  <article className={className}>\n    <>\n      {header && (\n        <header>\n          <h3>{header}</h3>\n        </header>\n      )}\n      <main>{children}</main>\n      {footer && <footer>{footer}</footer>}\n    </>\n  </article>\n);\n","\"use client\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport * as ResumeTypes from \"~/lib/resume\";\n\nexport const Contact = ({\n  links = [],\n  contact = {},\n}: {\n  links?: ResumeTypes.Link[];\n  contact?: ResumeTypes.Contact;\n}) => {\n  const contactLinks: ResumeTypes.Link[] = [\n    ...(contact.publicProfiles ?? []),\n    ...(contact.contactMails?.map(\n      (p) =>\n        ({\n          type: \"email\",\n          URL: `mailto:${p}`,\n        } satisfies ResumeTypes.Link),\n    ) ?? []),\n    ...(contact.phoneNumbers?.map(\n      (p) =>\n        ({\n          type: \"tel\",\n          URL: `tel:+${p.countryCode} ${p.number}`,\n        } satisfies ResumeTypes.Link),\n    ) ?? []),\n  ];\n  const allLinks = [...links, ...contactLinks].map((p) => ({\n    type: p.URL,\n    URL: p.URL,\n  }));\n  return allLinks && <Links className=\"contact\" links={allLinks} />;\n};\n\nexport const AboutMe = ({ aboutMe }: { aboutMe: ResumeTypes.AboutMe }) => (\n  <>\n    <hgroup>\n      <h1>\n        <Link href=\"/\">\n          {aboutMe.profile.name} {aboutMe.profile.surnames ?? \"\"}\n        </Link>\n      </h1>\n      <h2>{aboutMe.profile.title}</h2>\n    </hgroup>\n    {aboutMe.profile.avatar && (\n      <Avatar avatar={aboutMe.profile.avatar} name={aboutMe.profile.name} />\n    )}\n    {aboutMe.profile.location && (\n      <Location location={aboutMe.profile.location} />\n    )}\n    <Contact links={aboutMe.relevantLinks} contact={aboutMe.profile.contact} />\n  </>\n);\n\nconst Avatar = ({\n  avatar,\n  name,\n}: {\n  avatar: ResumeTypes.Image;\n  name: string;\n}) => (\n  <figure>\n    <Image\n      height=\"136\"\n      width=\"136\"\n      alt={`${name} Professional Photo`}\n      src={\n        (avatar as ResumeTypes.ImageLink).link\n          ? (avatar as ResumeTypes.ImageLink).link\n          : `data:${(avatar as ResumeTypes.ImageData).mediaType};base64,${\n              (avatar as ResumeTypes.ImageData).data\n            }`\n      }\n      style={{\n        maxWidth: \"100%\",\n        height: \"auto\",\n      }}\n    />\n  </figure>\n);\n\nconst Location = ({ location }: { location: ResumeTypes.Location }) => (\n  <p className=\"location\">\n    {Object.entries(location).map(([k, v]) => (\n      <span key={k} className={`location ${k}`}>\n        {v}\n      </span>\n    ))}\n  </p>\n);\n\nconst Links = ({\n  links,\n  className = \"\",\n}: {\n  links: ResumeTypes.Link[];\n  className?: string;\n}) => (\n  <nav className={className}>\n    <ul>\n      {links.map((link) => (\n        <li key={link.URL}>\n          <a href={link.URL} className=\"no-print\">\n            <span>{link.type}</span>\n          </a>\n          <span className=\"print-only\">{link.URL}</span>\n        </li>\n      ))}\n    </ul>\n  </nav>\n);\n","\"use client\";\nimport { PropsWithChildren } from \"react\";\nimport Head from \"next/head\";\nimport { AboutMe } from \"./resume/AboutMe\";\nimport * as ResumeTypes from \"~/lib/resume\";\nimport resume from \"../app/resume.json\";\n\nexport default function Layout({\n  children,\n  title,\n}: PropsWithChildren<{ title: string }>) {\n  return (\n    <>\n      <div id=\"root\" className=\"root\">\n        <Head>\n          <title>{title}</title>\n          <meta name=\"description\" content={title} />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        </Head>\n        <header>\n          <AboutMe aboutMe={resume.aboutMe as ResumeTypes.AboutMe} />\n        </header>\n        <main>{children}</main>\n        <footer className=\"no-print\">\n          <nav>\n            <p>\n              © David Souther 2008-\n              {new Date(resume.settings.lastUpdate).getFullYear()}\n            </p>\n            <cite>\n              <a href=\"https://github.com/davidsouther/resume\">Page Source</a>\n            </cite>\n          </nav>\n        </footer>\n      </div>\n    </>\n  );\n}\n","\"use client\";\nimport Markdown from \"marked-react\";\n\nexport const P = ({ children }: { children: string }) => (\n  <Markdown>{children}</Markdown>\n);\n\nexport const A = ({ href, children }: { children: string; href?: string }) =>\n  href ? (\n    <>\n      <a href={href}>{children}</a>\n    </>\n  ) : (\n    <span>{children}</span>\n  );\n","import type * as ResumeTypes from \"~/lib/resume\";\n\nexport const Organization = ({\n  org,\n}: {\n  org: ResumeTypes.PublicEntityDetails;\n}) => (\n  <h4 className=\"organization\">\n    {org.URL ? <a href={org.URL}>{org.name}</a> : org.name}\n  </h4>\n);\n","const SHOW_JOBS_SINCE = 2018;\n\nexport function show(date?: string | undefined): boolean {\n  if (date === undefined) return true;\n  const year = Number(date?.substring(0, 4));\n  const hide = year >= SHOW_JOBS_SINCE;\n  return hide;\n}\n","\"use client\";\nimport type * as ResumeTypes from \"~/lib/resume\";\nimport { A, P } from \"../P\";\nimport { Organization } from \"./Organization\";\nimport { show } from \"~/lib/util\";\n\nexport const JobDetail = ({ job }: { job: ResumeTypes.JobExperience }) => {\n  const hide = show(job.roles.at(-1)?.finishDate) ? \"\" : \"no-print\";\n  return (\n    <section className={`job ${hide}`}>\n      <Organization org={job.organization} />\n      {job.roles.map((role) => (\n        <Role key={role.name} role={role} />\n      ))}\n    </section>\n  );\n};\n\nconst Role = ({ role }: { role: ResumeTypes.Role }) => (\n  <section className=\"role\">\n    <h5 className=\"about\">\n      <em className=\"name\">{role.name}</em>\n      <small className=\"start date\">{role.startDate}</small>\n      <small className=\"finish date\">{role.finishDate ?? \"Current\"}</small>\n    </h5>\n    {role.challenges && (\n      <div className=\"details\">\n        {role.challenges.map(({ description }) => (\n          <P key={description}>{description}</P>\n        ))}\n      </div>\n    )}\n    <div className=\"competences\">\n      <Competences competences={role.competences} />\n    </div>\n  </section>\n);\n\nexport const COMPETENCES_MAP = new Map([\n  [\"AngularJS\", \"https://angularjs.org\"],\n  [\"Dart\", \"http://dart.dev\"],\n  [\"GraphQL\", \"https://graphql.org/\"],\n  [\"Istio\", \"https://istio.io\"],\n  [\"Kompose\", \"https://kompose.io/\"],\n  [\"Kubernetes\", \"https://kubernetes.io\"],\n  [\"amazon-web-services\", \"https://aws.amazon.com\"],\n  [\"angular\", \"https://angular.io/\"],\n  [\"golang\", \"https://go.dev\"],\n  [\"google-cloud-platform\", \"https://cloud.google.com/\"],\n  [\"google-compute-engine\", \"https://cloud.google.com/compute\"],\n  [\"node.js\", \"https://nodejs.org\"],\n  [\"python\", \"https://www.python.org\"],\n  [\"react\", \"https://react.dev/\"],\n  [\"redis\", \"redis.io\"],\n  [\"rust\", \"https://rust-lang.org\"],\n  [\"socket.io\", \"https://socket.io\"],\n  [\"typescript\", \"https://www.typescriptlang.org/\"],\n]);\n\nconst Competences = ({\n  competences = [],\n}: {\n  competences?: ResumeTypes.Competence[];\n}) => (\n  <ul>\n    {competences.map(({ name }) => (\n      <li key={name}>\n        <A href={COMPETENCES_MAP.get(name.toLowerCase())}>{name}</A>\n      </li>\n    ))}\n  </ul>\n);\n"],"names":["Promise","resolve","then","__webpack_require__","t","bind","Card","className","header","children","footer","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","article","jsxs","Fragment","h3","main","aboutMe","Contact","contact","links","contactLinks","publicProfiles","contactMails","map","type","URL","concat","p","phoneNumbers","countryCode","number","allLinks","jsx_runtime","Links","AboutMe","hgroup","h1","Link","href","profile","name","surnames","h2","title","avatar","Avatar","location","Location","relevantLinks","figure","Image","height","width","alt","src","link","mediaType","data","style","maxWidth","Object","entries","k","v","span","nav","ul","li","a","Layout","div","id","Head","meta","content","resume","Date","getFullYear","cite","P","Markdown","A","role","Organization","org","h4","JobDetail","job","hide","show","date","undefined","year","Number","substring","roles","at","finishDate","section","organization","Role","h5","em","small","startDate","challenges","description","Competences","competences","COMPETENCES_MAP","Map","get","toLowerCase"],"sourceRoot":""}