{"version":3,"file":"static/chunks/app/page-7ed39945dbfa5508.js","mappings":"4EAAA,2CAA0K,CAE1K,qCAA0G,CAE1G,sCAAyI,CAEzI,sCAAmI,CAEnI,sCAAqJ,sECL9I,IAAMA,EAAO,OAAC,WACnBC,EAAY,EAAE,QACdC,CAAM,UACNC,CAAQ,QACRC,CAAM,CAMP,SACC,UAACC,UAAAA,CAAQJ,UAAWA,WAClB,iCACGC,GACC,UAACA,SAAAA,UACC,UAACI,KAAAA,UAAIJ,MAGT,UAACK,OAAAA,UAAMJ,IACNC,GAAU,UAACA,SAAAA,UAAQA,UAGxB,kHCpBK,IAAMI,EAAU,QASfC,EAOAA,EARAA,EACAA,EAOAA,KAhBgB,OACtBC,EAAQ,EAAE,SACVD,EAAU,CAAC,CAAC,CAIb,GAkBOE,EAAW,IAAID,KAhBfD,QAAAA,EAAAA,EAAQG,cAAc,GAAtBH,KAAAA,IAAAA,EAAAA,EAA0B,EAAE,IAM5B,QALAA,EAAoB,QAApBA,EAAAA,EAAQI,YAAAA,GAARJ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBK,GAAG,CAC3B,GACG,EACCC,KAAM,QACNC,IAAK,UAAY,OAAFC,GACjB,KALAR,KAAAA,IAAAA,EAAAA,EAMC,EAAE,IACHA,OAAAA,GAAAA,QAAAA,EAAAA,EAAQS,YAAAA,GAART,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBK,GAAG,CAC3B,GACG,EACCC,KAAM,MACNC,IAAK,QAAyBC,MAAAA,CAAjBA,EAAEE,WAAW,CAAC,KAAY,OAATF,EAAEG,MAAM,EACxC,KALAX,KAAAA,IAAAA,EAAAA,EAMC,EAAE,CAEmC,CAACK,GAAG,CAAC,GAAQ,EACvDC,KAAME,EAAED,GAAG,CACXA,IAAKC,EAAED,GAAG,CACZ,GACA,OAAOL,GAAY,UAACU,EAAAA,CAAMpB,UAAU,UAAUS,MAAOC,GACvD,EAAE,EAEqB,QAKWW,KALV,SAAEA,CAAO,CAAoC,SACnE,iCACE,WAACC,SAAAA,WACC,UAACC,KAAAA,UACC,WAACC,IAAIA,CAACC,KAAK,KAAND,SACFH,EAAQK,OAAO,CAACC,IAAI,CAAC,IAAEN,QAAAA,EAAAA,EAAQK,OAAO,CAACE,QAAAA,GAAhBP,KAAAA,IAAAA,EAAAA,EAA4B,QAGxD,UAACQ,KAAAA,UAAIR,EAAQK,OAAO,CAACI,KAAK,MAE3BT,EAAQK,OAAO,CAACK,MAAM,EACrB,UAACC,EAAAA,CAAOD,OAAQV,EAAQK,OAAO,CAACK,MAAM,CAAEJ,KAAMN,EAAQK,OAAO,CAACC,IAAI,GAEnEN,EAAQK,OAAO,CAACO,QAAQ,EACvB,UAACC,EAAAA,CAASD,SAAUZ,EAAQK,OAAO,CAACO,QAAQ,GAE9C,UAAC1B,EAAAA,CAAQE,MAAOY,EAAQc,aAAa,CAAE3B,QAASa,EAAQK,OAAO,CAAClB,OAAO,OAEzE,EAEa,OAAC,QACduB,CAAM,MACNJ,CAAI,CAIL,SACC,UAACS,SAAAA,UACC,UAACC,EAAAA,OAAKA,CAAAA,CACJC,OAAO,MACPC,MAAM,MACNC,IAAK,GAAQ,OAALb,EAAK,uBACbc,IACE,EAAkCC,IAAI,CAClC,EAAkCA,IAAI,CACtC,QACE,OADM,EAAkCC,SAAS,CAAC,YAEnD,OADC,EAAkCC,IAAI,EAG9CC,MAAO,CACLC,SAAU,OACVR,OAAQ,MACV,OAKAJ,EAAW,OAAC,CAAED,UAAQ,CAAsC,SAChE,UAACjB,IAAAA,CAAEhB,UAAU,oBACV+C,OAAOC,OAAO,CAACf,GAAUpB,GAAG,CAAC,OAAC,CAACoC,EAAGC,EAAE,SACnC,UAACC,OAAAA,CAAanD,UAAW,YAAc,OAAFiD,YAClCC,GADQD,QAOX7B,EAAQ,OAAC,CACbX,OAAK,WACLT,EAAY,EAAE,CAIf,SACC,UAACoD,MAAAA,CAAIpD,UAAWA,WACd,UAACqD,KAAAA,UACE5C,EAAMI,GAAG,CAAC,GACT,WAACyC,KAAAA,WACC,UAACC,IAAAA,CAAE9B,KAAMiB,EAAK3B,GAAG,CAAEf,UAAU,oBAC3B,UAACmD,OAAAA,UAAMT,EAAK5B,IAAI,KAElB,UAACqC,OAAAA,CAAKnD,UAAU,sBAAc0C,EAAK3B,GAAG,KAJ/B2B,EAAK3B,GAAG,+dChGV,SAASyC,EAAO,CAGQ,KAHR,UAC7BtD,CAAQ,OACR4B,CAAK,CACgC,CAHR,EAI7B,MACE,+BACE,WAAC2B,MAAAA,CAAIC,GAAG,OAAO1D,UAAU,iBACvB,WAAC2D,IAAIA,WACH,KADGA,GACH,EAAC7B,QAAAA,UAAOA,IACR,UAAC8B,OAAAA,CAAKjC,KAAK,cAAckC,QAAS/B,IAClC,UAAC8B,OAAAA,CAAKjC,KAAK,WAAWkC,QAAQ,2CAEhC,UAAC5D,SAAAA,UACC,UAAC6D,EAAOA,CAACzC,IAADyC,IAAUC,EAAAA,EAAc,KAElC,UAACzD,OAAAA,UAAMJ,IACP,UAACC,SAAAA,CAAOH,UAAU,oBAChB,WAACoD,MAAAA,WACC,WAACpC,IAAAA,WAAE,2BAEA,IAAIgD,KAAKD,EAAAA,EAAAA,CAAAA,EAA0B,EAAEE,WAAW,MAEnD,UAACC,OAAAA,UACC,UAACX,IAAAA,CAAE9B,KAAK,kDAAyC,2BAO/D,iFCrCO,SAAS0C,QAAUC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAO,GACzBC,EAAO,CACXX,QAAIY,EACJC,IAAK,GACLC,QAAS,EAAE,CACXC,WAAY,CAAC,CACf,EAEIC,EAAM,EACNC,EAAQ,MACRC,EAAO,GACPC,EAAQ,GAEZ,SAASC,EAAWC,CAAI,EACtB,OAAQJ,GACN,IAAK,MACEN,EAAKE,GAAG,EAAE,CACbF,EAAKE,GAAG,CAAGM,CAAAA,EAEb,KACF,KAAK,KACHR,EAAKX,EAAE,CAAGmB,EACV,KACF,KAAK,QACHR,EAAKG,OAAO,CAACQ,IAAI,CAACH,GAClB,KACF,KAAK,OACHD,EAAOC,EACP,KACF,KAAK,MACHR,EAAKI,UAAU,CAACG,EAAK,CAAGC,CAE5B,CACAA,EAAQ,GACRF,EAAQI,CACV,CAEA,KAAOL,EAAMN,EAAKa,MAAM,EAAE,CACxB,OAAQb,EAAKc,MAAM,CAACR,IAClB,IAAK,IACHI,EAAW,MACX,KACF,KAAK,IACHA,EAAW,SACX,KACF,KAAK,IACHA,EAAW,QACX,KACF,KAAK,IACHA,EAAW,OACX,KACF,KAAK,IACL,IAAK,IACHA,EAAW,OACX,KACF,SACED,GAAST,EAAKc,MAAM,CAACR,EAEzB,CACAA,GAAO,CACT,CAOA,OANAI,EAAW,OAEXT,EAAKG,OAAO,CAACW,IAAI,GAEjBd,EAAKE,GAAG,CAAGF,EAAKE,GAAG,EAAI,OAEhBF,CACT,CAEO,SAASe,EAAWhB,CAAI,CAAEP,CAAO,MAAE/C,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAO,SAC3CyD,EAAM,IAAMH,EAAKG,GAAG,CACpBH,EAAKV,EAAE,EAAE,IACJ,QAAgB,OAARU,EAAKV,EAAE,CAAC,MAErBU,EAAKI,OAAO,CAACS,MAAM,CAAG,GAAG,CAC3BV,GAAO,WAAkC,OAAvBH,EAAKI,OAAO,CAACa,IAAI,CAAC,KAAK,MAE3C,IAAMC,EAAQvC,OAAOC,OAAO,CAACoB,EAAKK,UAAU,EAa5C,OAZIa,EAAML,MAAM,CAAG,GAAG,CACpBV,GAAO,IAAMe,EAAMzE,GAAG,CAAC,OAAC,CAACoC,EAAGC,EAAE,SAAK,GAASA,MAAAA,CAAND,EAAE,MAAM,OAAFC,EAAE,OAAImC,IAAI,CAAC,MAExC,OAAO,CAApBjB,EAAKG,GAAG,CACVA,GAAO,SAAiB,OAARV,EAAQ,QAEZ,SAAR/C,EACFyD,GAAO,MAAkBH,MAAAA,CAAZP,EAAQ,MAAa,OAATO,EAAKG,GAAG,CAAC,OAElCA,GAAO,IAAgBH,MAAAA,CAAZP,EAAQ,MAAa,OAATO,EAAKG,GAAG,CAAC,KAG7BA,CACT,CCzFA,IAAMgB,EAAa,uvhHCAnB,SAASC,EAAa7D,CAAI,EACxB,OAAO8D,KAA+BnB,KAAlB,CAAC,IAAS,OAAL3C,EAAK,KAAG,CAGnC,IAAM+D,EAAiB,IAAIC,IAErBC,EAAuB,oBA2BvBC,EAAqB,gCGjC3B,IAAMC,EAAa,IAAIH,IAEjBI,EAAQ,IAAIC,IAOZC,EAAiB,aA+BjBC,EAAe,UChCfC,EAAS,IAAIC,EAAAA,EAAMA,CACzBD,EAAOE,GAAG,CD4GK,CACb1E,KAAM,IC7Ga2E,SD8GnBC,SAAU,CACRC,QAAQC,CAAK,EACX,GAAM,QAAEC,CAAM,OAAEC,CAAK,CAAE,CAAGF,EACpBG,EAAO,IAAI,CAACC,MAAM,CAACC,WAAW,CAACJ,GACjChD,EAAK+C,EAAM/C,EAAE,CAAG,OAAgB,OAAT+C,EAAM/C,EAAE,CAAC,KAAK,GACzC,MAAO,KAAcA,MAAAA,CAATiD,EAAM,KAASC,MAAAA,CAANlD,EAAG,KAAaiD,MAAAA,CAAVC,EAAK,OAAW,OAAND,EAAM,MAC7C,CACF,EACAI,WAAY,CArFG,CACfpF,KAAMuE,EACNK,SAASE,CAAK,SACZ,EAAU3F,IAAI,GAAKoF,GAAiBH,EAAMiB,GAAG,CAACP,EAAM/C,EAAE,EAG/C,CAH4B,EAC1B,cAA8C,OAAhC,IAAI,CAACmD,MAAM,CAACI,KAAK,CAACR,EAAMC,MAAM,EAAE,eAGzD,CACF,EAvCmB,CACjB/E,KAAMsE,EACNiB,MAAO,eACPC,GAAS,EACIC,OAAO,CAAC,MAErBC,UAAU5E,CAAG,EACX,IAAM6E,EAAQ7E,EAAI6E,KAAK,CAAC,sCACxB,EAAIA,GACK,CACLxG,GAFO,EAEDmF,EACNsB,IAAKD,CAAK,CAAC,EAAE,CACbE,UAAWF,EAAMG,MAAM,CAACC,GAAG,CAIjC,EACAnB,SAASE,CAAK,QAOeA,EAN3B,IAAMe,GAzBa7F,EAyBa8E,EAAMe,KAApBG,IAA6B,CAACC,OAAO,CAAC,IAAK,IAxB/D7B,EAAM8B,GAAG,CAAClG,GACHmE,EAAWgC,GAAG,CAACnG,IAwBpB,GAAI6F,EAAW,CACb,IAAMd,EACe,YAAnBc,EAAU1G,IAAI,CAAiB0G,EAAUd,MAAM,CAAG,CAACc,EAAU,CAC/D,OAAO,IAAI,CAACX,MAAM,CAACI,KAAK,CAACP,EAC3B,CACE,MADK,CACE,IAAI,CAACG,MAAM,CAACI,KAAK,CAAa,QAAZR,EAAAA,EAAMC,MAAAA,GAAND,KAAAA,IAAAA,EAAAA,EAAgB,EAAE,CAE/C,CACF,EAyFoC,CAClCsB,WAAWtB,CAAK,EACVA,EAAM/C,EAAE,EACVoC,EAAWkC,GAAG,CAACvB,EAAM/C,EAAE,CAAE+C,EAE7B,CACF,CAAC,EAAC,EC3HKJ,GAAG,CAAC4B,CLuCMlB,SKvCGkB,ELuCS,CA9CV,CACjBtG,KAAM4D,EACN2B,MAAO,QACPC,MAAM1E,CAAG,MACAA,EAAP,OAAiB,QAAVA,EAAAA,EAAI6E,KAAK,CAAC,cAAV7E,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAuByF,KAAK,EAErCb,UAAU5E,CAAG,EACX,IAAM6E,EAAQ7E,EAAI6E,KAAK,CACrB,OAWA,WAXkB,wDAapB,GAAIA,EAAO,KAEEA,EADX,IAAMV,EAAOnE,EACVmF,OAAO,SAACN,EAAAA,EAAMG,MAAAA,GAANH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAca,MAAM,CAAE,IAC9BP,OAAO,CAAC,eAAgB,IACxBQ,IAAI,GACD3B,EAAQ,CACZ3F,KAAMyE,EACNgC,IAAKD,CAAK,CAAC,EAAE,CACbZ,OAAQ,EAAE,MACVE,EACAxC,KAAMD,EAAUmD,EAAMG,KAAPtD,CAAa,CAACC,IAAI,CACnC,EAKA,OAJIqC,EAAMrC,IAAI,CAACV,EAAE,EAAE,CACjB+C,EAAM/C,EAAE,CAAG+C,EAAMrC,IAAI,CAACV,EAAE,EAE1B,IAAI,CAAC2E,KAAK,CAACC,WAAW,CAAC7B,EAAMG,IAAI,CAAEH,EAAMC,MAAM,EACxCD,CACT,CACA,OAAO,CACT,EACAF,SAASE,CAAK,EACZ,OAAOrB,EAAWqB,EAAMrC,IAAI,CAAE,CAAbgB,GAAiB,CAACyB,MAAM,CAACI,KAAK,CAACR,EAAMC,MAAM,EAAG,QACjE,CACF,EAEyC,CAAE,EAAC,EKtCrCL,GAAG,CFoBK,CAAEU,KEpBAwB,MFoBY,CA9Bd,CACb5G,KAAM,SACNuF,MAAO,eACPC,GAAS,EACIC,OAAO,CAAC,KAErBC,UAAU5E,CAAG,EACX,IAAM6E,EAAQ7E,EAAI6E,KAAK,CAAC,sDACxB,IAAIA,EAWF,MAAO,EAXE,EACT,IAAMV,EAAOU,EAAMG,MAAM,CAAC5D,OAAO,CAACuE,IAAI,GAChCI,EAAc,IAAI,CAACH,KAAK,CAACI,YAAY,CAAC7B,GAC5C,MAAO,CACL9F,KAAM,SACNyG,IAAKD,CAAK,CAAC,EAAE,MACbV,EACAF,OAAQ8B,EACRpE,KAAMD,EAAUmD,EAAMG,KAAPtD,CAAa,CAACC,IAAI,CACnC,CACF,CAGF,EACAmC,IAJS,KAIAE,CAAK,QACZ,UAA6B,CAAzBA,EAAM3F,IAAI,EACLsE,EAAWqB,EAAMrC,IAAI,CAAE,CAAbgB,GAAiB,CAACyB,MAAM,CAACC,WAAW,CAACL,EAAMC,MAAM,EAGtE,CACF,EAEqC,CAAE,EAAC,EEnBjCL,GAAG,CHSQ,CAChBE,QGVcmC,CHUJ,CAAEA,KAAKA,CAlBnB,SAASA,CAAoB,EAkBVA,IAjBG9B,EAAAA,EADR8B,GAAC,MAAEjH,CAAI,MAAEmF,CAAI,CAAE,CAAd,EACT,MAAExC,CAAI,KAAE5B,CAAG,CAAE,CAAGoE,QAAAA,EAAW,QAAXA,EAAAA,EAAKU,KAAK,CAAC,uDAAXV,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAChBa,MAAAA,GADgBb,KAAAA,IAAAA,EAAAA,EACN,CAAExC,KAAM,GAAI5B,IAAKoE,CAAK,EAIhCrE,EAAQ6B,CAFZA,EAAOD,EAAUC,EAAAA,EAEAK,GAFDN,OAEW,CAAC5B,KAAK,CAAG,WAAiC,OAAtB6B,EAAKK,UAAU,CAAClC,KAAK,CAAC,KAAK,GACtED,EAAS8B,EAAKK,UAAU,CAACnC,MAAM,CAC/B,YAAmC,OAAvB8B,EAAKK,UAAU,CAACnC,MAAM,CAAC,KACnC,GACAqG,EACFvE,EAAKI,OAAO,CAACS,MAAM,CAAG,EAAI,WAAkC,OAAvBb,EAAKI,OAAO,CAACa,IAAI,CAAC,KAAK,MAAM,IAEpE,MAAO,aAAqBsD,MAAAA,CAARlH,EAAK,KAAoBe,MAAAA,CAAjBmG,EAAU,SAAcpG,MAAAA,CAAPC,EAAI,KAAWF,MAAAA,CAARC,GAAe,OAAPD,EAAO,MACrE,CAIoB,CACpB,GGVA6D,EAAOE,GAAG,CJ8CK,CACbU,OI/CiB6B,IJ+CL,CAnDW,CACvBjH,KAAMiE,EACNsB,MAAO,SACPC,MAAM1E,GAAG,EACI2E,OAAO,CAAC,KAErBC,UAAU5E,CAAG,EACX,IAAM6E,EAAQ7E,EAAI6E,KAAK,CAAC,6CACxB,GAAIA,EAAO,CACT,GAAM,MAAE3F,CAAI,OAAEkD,CAAK,CAAE,CAAGyC,EAAMG,MAAM,OACpC,CAAIjC,EAAa7D,KACjB+D,EADwB,GACN,CAAC/D,EAAMkD,CADM,CACAuD,IAAI,IAC5B,CACLtH,KAAM8E,EACN2B,IAAKD,CAAK,CAAC,EAAE,EAEjB,CACA,OAAO,CACT,WACAf,IACS,EAEX,EAIsB,CACpB5E,KAAMkE,EACNqB,MAAO,eACPC,GAAS,EACIC,OAAO,CAAC,KAErBC,UAAU5E,CAAG,EACX,IAAM6E,EAAQ7E,EAAI6E,KAAK,CAAC,qCACxB,GAAIA,EAAO,CACT,GAAM,MAAE3F,CAAI,CAAE,CAAG2F,EAAMG,MAAM,OAC7B,CAAIjC,EAAa7D,IACV,CACLb,EAFsB,GAEhB+E,EACN0B,EAH6B,EAGxBD,CAAK,CAAC,EAAE,MACb3F,CACF,CACF,CACA,OAAO,CACT,EACA4E,SAASE,CAAK,MACLf,EAAP,OAAOA,QAAAA,EAAAA,EAAeoC,GAAG,CAACrB,EAAM9E,KAAI,GAA7B+D,KAAAA,IAAAA,EAAAA,EAAkCe,EAAM9E,IAAI,CAEvD,EAG+C,CAC9C,EAAC,cK5DK,IAAMkH,EAAK,OAAC,UAAE3I,CAAQ,CAAwB,GAC7C4I,EAAOC,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IAAMC,EFkDtB,IElD4BA,KFkDnBC,CAAwB,EACtCnD,EAAWoD,GCpCMD,EDoCD,GAChBlD,EAAMmD,KAAK,GACX,IAAMC,EAAchD,EAAO4B,UAAU,CACrC5B,EAAO4B,UAAU,CAAG,SAASqB,CAAgC,CAAEC,CAAQ,EACrE,IAAMC,EAAU,IAAIC,EAAAA,CAAOA,CACrBC,EAASL,EAAYM,IAAI,CAACtD,EAAQO,EAAQ2C,GAG1CK,EAAQ,EAAE,CAEZC,EAAI,EACR,SAASC,IACP,IAAMC,EAAUH,EAAMI,GAAG,GACrBJ,EAAMzE,MAAM,CAAG,EACjByE,CADoB,CACdK,EAAE,CAAC,CAAC,GAAGrD,MAAM,CAAC1B,IAAI,CAAC6E,IAEzBnD,EAAOsD,MAAM,CAACH,EAAQI,GAAG,CAAEN,EAAIE,EAAQI,GAAG,CAAEJ,GAC5CF,EAAIE,EAAQI,GAAG,CAAG,EAEtB,CAEA,KAAON,EAAIjD,EAAOzB,MAAM,CAAE0E,IAAK,KAkBLD,EAOPA,EAAAA,EAxBjB,IAAMjD,EAAQC,CAAM,CAACiD,EAAE,CACjBO,EAAc,SACMzD,EAAxB,IAAM/C,EAAK4F,EAAQa,IAAI,CAAC1D,QAAAA,EAAAA,EAAM/C,EAAAA,GAAN+C,KAAAA,MAAAA,EAAYA,EAAMG,IAAI,EACxCiD,EAAU,CACd/I,KAAMoF,KACNxC,EACAuG,IAAKN,EACLhD,MAAOF,EAAME,KAAK,CAClBD,OAAQ,EAAE,EAKZ,OAHAZ,EAAWkC,GAAG,CAACtE,EAAImG,GACnBH,EAAM1E,IAAI,CAAC6E,GACXpD,EAAM/C,EAAE,CAAGmG,EAAQnG,EAAE,CACdmG,CACT,EAEA,GAAmB,YAAfpD,EAAM3F,IAAI,CAAgB,CAC5B,KAAO2F,EAAME,KAAK,WAAI+C,EAAAA,EAAMK,EAAE,CAAC,CAAC,KAAVL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAc/C,KAAAA,EAAO,CACzCiD,IAEYM,IACNxD,MAAM,CAAC1B,IAAI,CAACyB,EACtB,KAAyB,EAAlB,YAAIA,EAAM3F,IAAI,EAAsC,WAAW,EAAvBsD,IAAI,CAACG,GAAG,EAErDkC,EAAME,KAAK,CAAG,CAAC+C,QAAAA,EAAAA,QAAAA,EAAAA,EAAMK,EAAE,CAAC,CAAC,KAAVL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAc/C,KAAAA,GAAd+C,KAAAA,IAAAA,EAAAA,EAAuB,GAAK,EACvCA,EAAMzE,MAAM,CAAG,GAAG,IAGtBiF,KACSR,EAAMzE,MAAM,CAAG,GAAG,EACrB8E,EAAE,CAAC,CAAC,GAAGrD,MAAM,CAAC1B,IAAI,CAACyB,EAE7B,CAEA,KAAOiD,EAAMzE,MAAM,CAAG,EAAG,CACvB2E,IAGF,OAAOJ,CACT,CACF,EClGoBrD,GACXA,EAAOc,KAAK,CAACmD,IChByB,CAAClK,EAAS,EACvD,MAAO,UAACuD,MAAAA,CAAI4G,wBAAyB,CAAEC,aAAQxB,EAAAA,EAAQ,EAAG,GAC5D,EAAE,EAEe,IAHgCA,GAG/B,MAAErH,CAAI,UAAEvB,CAAQ,CAAuC,UACvEuB,EACE,+BACE,UAAC8B,IAAAA,CAAE9B,KAAMA,WAAOvB,MAGlB,UAACiD,OAAAA,UAAMjD,KACP,8ECdG,IAAMqK,EAAe,OAAC,KAC3BC,CAAG,CAGJ,SACC,UAACC,KAAAA,CAAGzK,UAAU,wBACXwK,EAAIzJ,GAAG,CAAG,UAACwC,IAAAA,CAAE9B,KAAM+I,EAAIzJ,GAAG,UAAGyJ,EAAI7I,IAAI,GAAQ6I,EAAI7I,IAAI,IAExD,EEJuB,QACL+I,KADM,KAAEA,CAAG,CAAsC,GAC7DC,GAAOC,IAAIA,KDLHA,CAA8B,SAC5C,KAAatG,IAATuG,GACSC,IADW,IAEHC,GAFU,EACXF,EAAAA,KAAAA,EAAAA,EAAMG,MAANH,GAAe,CAAC,EAAG,KAJjB,IAOxB,ECAkC,QAAdH,EAAAA,EAAIO,KAAK,CAAClB,EAAE,CAAC,CAAC,KAAdW,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkBQ,UAAU,EAAS,WAAL,GAClD,MACE,WAACrB,UAAAA,CAAQ7J,UAAW,OAAY,OAAL2K,aACzB,UAACJ,EAAYA,CAACC,IAAKE,EAAIS,GAAVZ,SAAsB,GAClCG,EAAIO,KAAK,CAACpK,GAAG,CAAC,GACb,UAACuK,EAAAA,CAAqBC,KAAMA,GAAjBA,EAAK1J,IAAI,KAI5B,EAAE,EAEW,QAOyB0J,KAPxB,MAAEA,CAAI,CAA8B,SAChD,WAACxB,UAAAA,CAAQ7J,UAAU,iBACjB,UAACsL,KAAAA,UACC,UAACC,KAAAA,CAAGvL,UAAU,gBAAQqL,EAAK1J,IAAI,KAEjC,WAAC2J,KAAAA,CAAGtL,UAAU,kBACZ,UAACwL,QAAAA,CAAMxL,UAAU,sBAAcqL,EAAKI,SAAS,GAC7C,UAACD,QAAAA,CAAMxL,UAAU,uBAAeqL,QAAAA,EAAAA,EAAKH,UAAAA,GAALG,KAAAA,IAAAA,EAAAA,EAAmB,eAEpDA,EAAKK,UAAU,EACd,UAACjI,MAAAA,CAAIzD,UAAU,mBACZqL,EAAKK,UAAU,CAAC7K,GAAG,CAAC,OAAC,aAAE8K,CAAW,CAAE,SACnC,UAAC9C,EAAAA,EAAEA,CAAAA,UAAoB8C,GAAdA,OAIf,UAAClI,MAAAA,CAAIzD,UAAU,uBACb,UAAC4L,EAAAA,CAAYC,YAAaR,EAAKQ,WAAW,SAKnCC,EAAkB,IAAInG,IAAI,CACrC,CAAC,sBAAuB,4BAA4B,CACpD,CAAC,UAAW,UAAU,CACtB,CAAC,YAAa,YAAY,CAC1B,CAAC,MAAO,4BAA4B,CACpC,CAAC,UAAW,iBAAiB,CAC7B,CAAC,yBAA0B,yBAAyB,CACpD,CAAC,YAAa,YAAY,CAC1B,CAAC,aAAc,aAAa,CAC5B,CAAC,cAAe,aAAa,CAC7B,CAAC,qBAAsB,+BAA+B,CACtD,CAAC,aAAc,aAAa,CAC5B,CAAC,MAAO,aAAa,CACrB,CAAC,aAAc,aAAa,CAC5B,CAAC,MAAO,wBAAwB,CAChC,CAAC,cAAe,cAAc,CAC9B,CAAC,OAAQ,SAAS,CAClB,CAAC,SAAU,SAAS,CACpB,CAAC,SAAU,SAAS,CACpB,CAAC,QAAS,QAAQ,CAClB,CAAC,OAAQ,OAAO,CAChB,CAAC,oBAAqB,oBAAoB,CAC1C,CAAC,aAAc,aAAa,CAC7B,EAAE,EAE4B,IAAIA,IAAI,CACrC,CAAC,sBAAuB,yBAAyB,CACjD,CAAC,UAAW,sBAAsB,CAClC,CAAC,YAAa,wBAAwB,CACtC,CAAC,UAAW,kCAAkC,CAC9C,CAAC,OAAQ,kBAAkB,CAC3B,CAAC,SAAU,iBAAiB,CAC5B,CAAC,wBAAyB,4BAA4B,CACtD,CAAC,wBAAyB,mCAAmC,CAC7D,CAAC,UAAW,uBAAuB,CACnC,CAAC,QAAS,mBAAmB,CAC7B,CAAC,UAAW,sBAAsB,CAClC,CAAC,aAAc,wBAAwB,CACvC,CAAC,cAAe,0BAA0B,CAC1C,CAAC,UAAW,qBAAqB,CACjC,CAAC,SAAU,qBAAqB,CAChC,CAAC,SAAU,yBAAyB,CACpC,CAAC,QAAS,qBAAqB,CAC/B,CAAC,QAAS,WAAW,CACrB,CAAC,OAAQ,wBAAwB,CACjC,CAAC,YAAa,oBAAoB,CAClC,CAAC,aAAc,kCAAkC,CAClD,EAAE,EAEiB,OAAC,aACnBkG,EAAc,EAAE,CAGjB,SACC,UAACxI,KAAAA,UACEwI,EAAYhL,GAAG,CAAC,QAGViL,KAHW,MAAEnK,CAAI,CAAE,SACxB,UAAC2B,KAAAA,UACC,UAACyI,EAAAA,CAACA,CAAAA,CAACtK,KAAMuK,EAAgBlE,GAAG,CAACnG,EAAKsK,WAAW,aAC1CH,QAAAA,EAAAA,EAAgBhE,GAAG,CAACnG,EAAKsK,WAAW,MAApCH,KAAAA,IAAAA,EAAAA,EAA2C,GAAQ,OAALnK,MAF1CA","sources":["webpack://_N_E/?6cec","webpack://_N_E/./src/components/Card.tsx","webpack://_N_E/./src/components/resume/AboutMe.tsx","webpack://_N_E/./src/components/Layout.tsx","webpack://_N_E/../../jefri/jiffdown/src/info.mjs","webpack://_N_E/../../jefri/jiffdown/src/block_info.mjs","webpack://_N_E/../../jefri/jiffdown/src/entities.mjs","webpack://_N_E/../../jefri/jiffdown/src/image.mjs","webpack://_N_E/../../jefri/jiffdown/src/inline.mjs","webpack://_N_E/../../jefri/jiffdown/src/references.mjs","webpack://_N_E/../../jefri/jiffdown/index.mjs","webpack://_N_E/./src/components/P.tsx","webpack://_N_E/./src/components/resume/Organization.tsx","webpack://_N_E/./src/lib/util.ts","webpack://_N_E/./src/components/resume/JobDetail.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"__esModule\",\"default\"] */ \"/Users/davidsouther/devel/davidsouther/resume/node_modules/next/dist/client/app-dir/link.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/davidsouther/devel/davidsouther/resume/src/components/Card.tsx\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"/Users/davidsouther/devel/davidsouther/resume/src/components/Layout.tsx\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"A\",\"MD\"] */ \"/Users/davidsouther/devel/davidsouther/resume/src/components/P.tsx\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"JobDetail\"] */ \"/Users/davidsouther/devel/davidsouther/resume/src/components/resume/JobDetail.tsx\");\n","\"use client\";\nimport { ReactNode } from \"react\";\n\nexport const Card = ({\n  className = \"\",\n  header,\n  children,\n  footer,\n}: {\n  className?: string;\n  header?: ReactNode;\n  children: ReactNode;\n  footer?: ReactNode;\n}) => (\n  <article className={className}>\n    <>\n      {header && (\n        <header>\n          <h3>{header}</h3>\n        </header>\n      )}\n      <main>{children}</main>\n      {footer && <footer>{footer}</footer>}\n    </>\n  </article>\n);\n","\"use client\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport * as ResumeTypes from \"~/lib/resume\";\n\nexport const Contact = ({\n  links = [],\n  contact = {},\n}: {\n  links?: ResumeTypes.Link[];\n  contact?: ResumeTypes.Contact;\n}) => {\n  const contactLinks: ResumeTypes.Link[] = [\n    ...(contact.publicProfiles ?? []),\n    ...(contact.contactMails?.map(\n      (p) =>\n        ({\n          type: \"email\",\n          URL: `mailto:${p}`,\n        } satisfies ResumeTypes.Link),\n    ) ?? []),\n    ...(contact.phoneNumbers?.map(\n      (p) =>\n        ({\n          type: \"tel\",\n          URL: `tel:+${p.countryCode} ${p.number}`,\n        } satisfies ResumeTypes.Link),\n    ) ?? []),\n  ];\n  const allLinks = [...links, ...contactLinks].map((p) => ({\n    type: p.URL,\n    URL: p.URL,\n  }));\n  return allLinks && <Links className=\"contact\" links={allLinks} />;\n};\n\nexport const AboutMe = ({ aboutMe }: { aboutMe: ResumeTypes.AboutMe }) => (\n  <>\n    <hgroup>\n      <h1>\n        <Link href=\"/\">\n          {aboutMe.profile.name} {aboutMe.profile.surnames ?? \"\"}\n        </Link>\n      </h1>\n      <h2>{aboutMe.profile.title}</h2>\n    </hgroup>\n    {aboutMe.profile.avatar && (\n      <Avatar avatar={aboutMe.profile.avatar} name={aboutMe.profile.name} />\n    )}\n    {aboutMe.profile.location && (\n      <Location location={aboutMe.profile.location} />\n    )}\n    <Contact links={aboutMe.relevantLinks} contact={aboutMe.profile.contact} />\n  </>\n);\n\nconst Avatar = ({\n  avatar,\n  name,\n}: {\n  avatar: ResumeTypes.Image;\n  name: string;\n}) => (\n  <figure>\n    <Image\n      height=\"136\"\n      width=\"136\"\n      alt={`${name} Professional Photo`}\n      src={\n        (avatar as ResumeTypes.ImageLink).link\n          ? (avatar as ResumeTypes.ImageLink).link\n          : `data:${(avatar as ResumeTypes.ImageData).mediaType};base64,${\n              (avatar as ResumeTypes.ImageData).data\n            }`\n      }\n      style={{\n        maxWidth: \"100%\",\n        height: \"auto\",\n      }}\n    />\n  </figure>\n);\n\nconst Location = ({ location }: { location: ResumeTypes.Location }) => (\n  <p className=\"location\">\n    {Object.entries(location).map(([k, v]) => (\n      <span key={k} className={`location ${k}`}>\n        {v}\n      </span>\n    ))}\n  </p>\n);\n\nconst Links = ({\n  links,\n  className = \"\",\n}: {\n  links: ResumeTypes.Link[];\n  className?: string;\n}) => (\n  <nav className={className}>\n    <ul>\n      {links.map((link) => (\n        <li key={link.URL}>\n          <a href={link.URL} className=\"no-print\">\n            <span>{link.type}</span>\n          </a>\n          <span className=\"print-only\">{link.URL}</span>\n        </li>\n      ))}\n    </ul>\n  </nav>\n);\n","\"use client\";\nimport { PropsWithChildren } from \"react\";\nimport Head from \"next/head\";\nimport { AboutMe } from \"./resume/AboutMe\";\nimport * as ResumeTypes from \"~/lib/resume\";\nimport resume from \"../app/resume.json\";\n\nexport default function Layout({\n  children,\n  title,\n}: PropsWithChildren<{ title: string }>) {\n  return (\n    <>\n      <div id=\"root\" className=\"root\">\n        <Head>\n          <title>{title}</title>\n          <meta name=\"description\" content={title} />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        </Head>\n        <header>\n          <AboutMe aboutMe={resume.aboutMe as ResumeTypes.AboutMe} />\n        </header>\n        <main>{children}</main>\n        <footer className=\"no-print\">\n          <nav>\n            <p>\n              © David Souther 2008-\n              {new Date(resume.settings.lastUpdate).getFullYear()}\n            </p>\n            <cite>\n              <a href=\"https://github.com/davidsouther/resume\">Page Source</a>\n            </cite>\n          </nav>\n        </footer>\n      </div>\n    </>\n  );\n}\n","export function parseInfo(info = \"\") {\n  const spec = {\n    id: undefined,\n    tag: \"\",\n    classes: [],\n    attributes: {},\n  };\n\n  let idx = 0;\n  let state = \"tag\";\n  let attr = \"\";\n  let value = \"\";\n\n  function transition(next) {\n    switch (state) {\n      case \"tag\":\n        if (!spec.tag) {\n          spec.tag = value;\n        }\n        break;\n      case \"id\":\n        spec.id = value;\n        break;\n      case \"class\":\n        spec.classes.push(value);\n        break;\n      case \"attr\":\n        attr = value;\n        break;\n      case \"val\":\n        spec.attributes[attr] = value;\n        break;\n    }\n    value = \"\";\n    state = next;\n  }\n\n  while (idx < info.length) {\n    switch (info.charAt(idx)) {\n      case \"#\":\n        transition(\"id\");\n        break;\n      case \".\":\n        transition(\"class\");\n        break;\n      case \"[\":\n        transition(\"attr\");\n        break;\n      case \"=\":\n        transition(\"val\");\n        break;\n      case \"]\":\n      case \" \":\n        transition(\"tag\");\n        break;\n      default:\n        value += info.charAt(idx);\n        break;\n    }\n    idx += 1;\n  }\n  transition(\"end\");\n\n  spec.classes.sort();\n\n  spec.tag = spec.tag || \"span\";\n\n  return spec;\n}\n\nexport function renderInfo(info, content, type = \"inline\") {\n  let tag = \"<\" + info.tag;\n  if (info.id) {\n    tag += ` id=\"${info.id}\"`;\n  }\n  if (info.classes.length > 0) {\n    tag += ` class=\"${info.classes.join(\" \")}\"`;\n  }\n  const attrs = Object.entries(info.attributes);\n  if (attrs.length > 0) {\n    tag += \" \" + attrs.map(([k, v]) => `${k}=\"${v}\"`).join(\" \");\n  }\n  if (info.tag === \"img\") {\n    tag += ` alt=\"${content}\" />`;\n  } else {\n    if (type == \"block\") {\n      tag += `>\\n${content}</${info.tag}>\\n`;\n    } else {\n      tag += `>${content}</${info.tag}>`;\n    }\n  }\n  return tag;\n}\n","import { marked } from \"marked\";\nimport { parseInfo, renderInfo } from \"./info.mjs\";\n\nconst TOKEN_TYPE = \"block-info\";\n\n/** @type {marked.TokenizerAndRendererExtension} */\nconst BLOCK_INFO = {\n  name: TOKEN_TYPE,\n  level: \"block\",\n  start(src) {\n    return src.match(/>[ \\t]?{/)?.index;\n  },\n  tokenizer(src) {\n    const match = src.match(\n      // Anchor to start\n      // Capture group named leader\n      //  Any number of space or tab characters\n      //  Literal >\n      //  Zero or one space or tab\n      //  Literal {\n      //  Capture group inside leader named info\n      //      Capture tokens up to next } (no nested infoblocks)\n      //  Literal }\n      // The rest of the content\n      // Noncaptureing group of two newlines or end of string, optional.\n      /^(?<leader>[ \\t]*>[ \\t]?\\{(?<info>[^}]+)\\}).*(?:\\n\\n|$)?/\n    );\n    if (match) {\n      const text = src\n        .replace(match.groups?.leader, \"\")\n        .replace(/^ *>[ \\t]?/gm, \"\")\n        .trim();\n      const token = {\n        type: TOKEN_TYPE,\n        raw: match[0],\n        tokens: [],\n        text,\n        info: parseInfo(match.groups.info),\n      };\n      if (token.info.id) {\n        token.id = token.info.id;\n      }\n      this.lexer.blockTokens(token.text, token.tokens);\n      return token;\n    }\n    return false;\n  },\n  renderer(token) {\n    return renderInfo(token.info, this.parser.parse(token.tokens), \"block\");\n  },\n};\n\nexport default { extensions: [BLOCK_INFO] };\n","import { marked } from \"marked\";\nimport HTML_ENTITIES from \"./known_entities.json\" assert { type: \"json\" };\n\nfunction isHtmlEntity(name) {\n  return HTML_ENTITIES[`&${name};`] !== undefined;\n}\n\nconst KNOWN_ENTITIES = new Map();\n\nconst RegisterEntitiesName = \"register-entities\";\n\n/** @type {marked.TokenizerAndRendererExtension} */\nconst RegisterEntities = {\n  name: RegisterEntitiesName,\n  level: \"inline\",\n  start(src) {\n    return src.indexOf(\"&\");\n  },\n  tokenizer(src) {\n    const match = src.match(/^&(?<name>[^:]+):(?<value>[^;]+);/);\n    if (match) {\n      const { name, value } = match.groups;\n      if (isHtmlEntity(name)) return false;\n      KNOWN_ENTITIES.set(name, value.trim());\n      return {\n        type: RegisterEntitiesName,\n        raw: match[0],\n      };\n    }\n    return false;\n  },\n  renderer() {\n    return \"\";\n  },\n};\n\nconst LookupEntitiesName = \"lookup-entities\";\n/** @type {marked.TokenizerAndRendererExtension} */\nconst LookupEntites = {\n  name: LookupEntitiesName,\n  level: \"inline\",\n  start(src) {\n    return src.indexOf(\"&\");\n  },\n  tokenizer(src) {\n    const match = src.match(/^&(?<name>(?!\\{)[^:;]+);/);\n    if (match) {\n      const { name } = match.groups;\n      if (isHtmlEntity(name)) return false;\n      return {\n        type: LookupEntitiesName,\n        raw: match[0],\n        name,\n      };\n    }\n    return false;\n  },\n  renderer(token) {\n    return KNOWN_ENTITIES.get(token.name) ?? token.name;\n  },\n};\n\nexport default {\n  extensions: [RegisterEntities, LookupEntites],\n};\n","import { parseInfo } from \"./info.mjs\";\n\n/**\n * Process an inline image with the format `![Alt Text][src \"=size title\"]`.\n * Title can start with size as `=[width]:[height] `, which will be be extracted\n * and applied to the rendered img tag.\n */\nfunction image({ href, text }) {\n  let { info, alt } = text.match(/^(?:\\{(?<info>[^}]+)\\})?\\s*(?<alt>.*)?/)\n    ?.groups ?? { info: \"\", alt: text };\n\n  info = parseInfo(info);\n\n  let width = info.attributes.width ? ` width=\"${info.attributes.width}\"` : \"\";\n  let height = info.attributes.height\n    ? ` height=\"${info.attributes.height}\"`\n    : \"\";\n  let classname =\n    info.classes.length > 0 ? ` class=\"${info.classes.join(\" \")}\" ` : \" \";\n\n  return `<img src=\"${href}\"${classname}alt=\"${alt}\"${width}${height} />`;\n}\n\n// /** @type {import(\"marked\").RendererExtension} */\nconst extension = {\n  renderer: { image },\n};\n\nexport default extension;\n","import { marked } from \"marked\";\nimport { parseInfo, renderInfo } from \"./info.mjs\";\n\n/** @type {marked.TokenizerAndRendererExtension} */\nconst INLINE = {\n  name: \"inline\",\n  level: \"inline\",\n  start(src) {\n    return src.indexOf(\"{\");\n  },\n  tokenizer(src) {\n    const match = src.match(/^\\{((?<info>[^:]+):)?(?<content>[^}]+)\\}/);\n    if (match) {\n      const text = match.groups.content.trim();\n      const innerTokens = this.lexer.inlineTokens(text);\n      return {\n        type: \"inline\",\n        raw: match[0],\n        text,\n        tokens: innerTokens,\n        info: parseInfo(match.groups.info),\n      };\n    } else {\n      return false;\n    }\n  },\n  renderer(token) {\n    if (token.type === \"inline\") {\n      return renderInfo(token.info, this.parser.parseInline(token.tokens));\n    }\n    return false;\n  },\n};\n\nexport default { extensions: [INLINE] };\n","import Slugger from \"github-slugger\";\n\n/** @type {Map<string, string>} */\nconst REFERENCES = new Map();\n/** @type {Set<string>} */\nconst MOVED = new Set();\n\nfunction findReference(name) {\n  MOVED.add(name);\n  return REFERENCES.get(name);\n}\n\nconst ReferencesName = \"references\";\n/** @type {import(\"marked\").TokenizerAndRendererExtension} */\nconst References = {\n  name: ReferencesName,\n  level: \"inline\",\n  start(src) {\n    return src.indexOf(\"&{\");\n  },\n  tokenizer(src) {\n    const match = src.match(/^&\\{(?<ref>[^}]+)};/);\n    if (match) {\n      return {\n        type: ReferencesName,\n        raw: match[0],\n        reference: match.groups.ref,\n      };\n    }\n    return false;\n  },\n  renderer(token) {\n    const reference = findReference(token.reference.replace(\"#\", \"\"));\n    if (reference) {\n      const tokens =\n        reference.type === \"section\" ? reference.tokens : [reference];\n      return this.parser.parse(tokens);\n    } else {\n      return this.parser.parse(token.tokens ?? []);\n    }\n  },\n};\n\nconst SectionsName = \"section\";\n/** @type {import(\"marked\").RendererExtension} */\nconst Sections = {\n  name: SectionsName,\n  renderer(token) {\n    if (token.type === SectionsName && !MOVED.has(token.id)) {\n      return `<section>\\n${this.parser.parse(token.tokens)}</section>\\n`;\n    }\n    return \"\";\n  },\n};\n\nexport function replaceWalkTokens(marked) {\n  REFERENCES.clear();\n  MOVED.clear();\n  const _walkTokens = marked.walkTokens;\n  marked.walkTokens = function walkTokensToBuildSections(tokens, callback) {\n    const slugger = new Slugger();\n    const values = _walkTokens.call(marked, tokens, callback);\n\n    /** @type {marked.Token[]} */\n    const stack = [];\n\n    let i = 0;\n    function popSection() {\n      const section = stack.pop();\n      if (stack.length > 0) {\n        stack.at(-1).tokens.push(section);\n      } else {\n        tokens.splice(section.pos, i - section.pos, section);\n        i = section.pos + 1;\n      }\n    }\n\n    for (; i < tokens.length; i++) {\n      const token = tokens[i];\n      const pushSection = () => {\n        const id = slugger.slug(token.id ?? token.text);\n        const section = {\n          type: SectionsName,\n          id,\n          pos: i,\n          depth: token.depth,\n          tokens: [],\n        };\n        REFERENCES.set(id, section);\n        stack.push(section);\n        token.id = section.id;\n        return section;\n      };\n\n      if (token.type === \"heading\") {\n        while (token.depth <= stack.at(-1)?.depth) {\n          popSection();\n        }\n        let section = pushSection();\n        section.tokens.push(token);\n      } else if (token.type == \"block-info\" && token.info.tag == \"section\") {\n        // A section block-info starts a new section at the current depth\n        token.depth = (stack.at(-1)?.depth ?? 0) + 1;\n        if (stack.length > 0) {\n          popSection();\n        }\n        pushSection();\n      } else if (stack.length > 0) {\n        stack.at(-1).tokens.push(token);\n      }\n    }\n\n    while (stack.length > 0) {\n      popSection();\n    }\n\n    return values;\n  };\n}\n\nexport default {\n  name: \"references\",\n  renderer: {\n    heading(token) {\n      const { tokens, depth } = token;\n      const text = this.parser.parseInline(tokens);\n      let id = token.id ? `id=\"${token.id}\"` : \"\";\n      return `<h${depth} ${id}>${text}</h${depth}>\\n`;\n    },\n  },\n  extensions: [Sections, References],\n  walkTokens(token) {\n    if (token.id) {\n      REFERENCES.set(token.id, token);\n    }\n  },\n};\n","// @ts-check\n\nimport { Marked } from \"marked\";\n\nimport blockInfo from \"./src/block_info.mjs\";\nimport entities from \"./src/entities.mjs\";\nimport image from \"./src/image.mjs\";\nimport inline from \"./src/inline.mjs\";\nimport references, { replaceWalkTokens } from \"./src/references.mjs\";\n// import hljs from \"highlight.js\";\n\nconst marked = new Marked();\nmarked.use(references);\nmarked.use(blockInfo);\nmarked.use(inline);\nmarked.use(image);\nmarked.use(entities);\n\n/** @param {string} md */\nexport function toHTML(md) {\n  replaceWalkTokens(marked);\n  return marked.parse(md);\n}\n","\"use client\";\nimport { toHTML } from \"@davidsouther/jiffdown\";\nimport { useMemo } from \"react\";\n\nexport const MD = ({ children }: { children: string }) => {\n  const body = useMemo(() => toHTML(children), [children]);\n  return <div dangerouslySetInnerHTML={{ __html: body ?? \"\" }}></div>;\n};\n\nexport const A = ({ href, children }: { children: string; href?: string }) =>\n  href ? (\n    <>\n      <a href={href}>{children}</a>\n    </>\n  ) : (\n    <span>{children}</span>\n  );\n","import type * as ResumeTypes from \"~/lib/resume\";\n\nexport const Organization = ({\n  org,\n}: {\n  org: ResumeTypes.PublicEntityDetails;\n}) => (\n  <h4 className=\"organization\">\n    {org.URL ? <a href={org.URL}>{org.name}</a> : org.name}\n  </h4>\n);\n","const SHOW_JOBS_SINCE = 2018;\n\nexport function show(date?: string | undefined): boolean {\n  if (date === undefined) return true;\n  const year = Number(date?.substring(0, 4));\n  const hide = year >= SHOW_JOBS_SINCE;\n  return hide;\n}\n","\"use client\";\nimport type * as ResumeTypes from \"~/lib/resume\";\nimport { A, MD } from \"../P\";\nimport { Organization } from \"./Organization\";\nimport { show } from \"~/lib/util\";\n\nexport const JobDetail = ({ job }: { job: ResumeTypes.JobExperience }) => {\n  const hide = show(job.roles.at(-1)?.finishDate) ? \"\" : \"no-print\";\n  return (\n    <section className={`job ${hide}`}>\n      <Organization org={job.organization} />\n      {job.roles.map((role) => (\n        <Role key={role.name} role={role} />\n      ))}\n    </section>\n  );\n};\n\nconst Role = ({ role }: { role: ResumeTypes.Role }) => (\n  <section className=\"role\">\n    <h5>\n      <em className=\"name\">{role.name}</em>\n    </h5>\n    <h5 className=\"about\">\n      <small className=\"start date\">{role.startDate}</small>\n      <small className=\"finish date\">{role.finishDate ?? \"Current\"}</small>\n    </h5>\n    {role.challenges && (\n      <div className=\"details\">\n        {role.challenges.map(({ description }) => (\n          <MD key={description}>{description}</MD>\n        ))}\n      </div>\n    )}\n    <div className=\"competences\">\n      <Competences competences={role.competences} />\n    </div>\n  </section>\n);\n\nexport const COMPETENCES_LCL = new Map([\n  [\"amazon-web-services\", \"Amazon Web Services (AWS)\"],\n  [\"angular\", \"Angular\"],\n  [\"angularjs\", \"AngularJS\"],\n  [\"aws\", \"Amazon Web Services (AWS)\"],\n  [\"bedrock\", \"Amazon Bedrock\"],\n  [\"curriculum development\", \"Curriculum Development\"],\n  [\"front end\", \"Front End\"],\n  [\"html & css\", \"HTML & CSS\"],\n  [\"instructing\", \"Instructor\"],\n  [\"interview training\", \"Technical Interview Training\"],\n  [\"javascript\", \"JavaScript\"],\n  [\"k8s\", \"Kubernetes\"],\n  [\"kubernetes\", \"Kubernetes\"],\n  [\"llm\", \"Large Language Models\"],\n  [\"mit-scratch\", \"MIT Scratch\"],\n  [\"node\", \"NodeJS\"],\n  [\"nodejs\", \"NodeJS\"],\n  [\"python\", \"Python\"],\n  [\"react\", \"React\"],\n  [\"rust\", \"Rust\"],\n  [\"technical writing\", \"Technical Writing\"],\n  [\"typescript\", \"TypeScript\"],\n]);\n\nexport const COMPETENCES_MAP = new Map([\n  [\"amazon-web-services\", \"https://aws.amazon.com\"],\n  [\"angular\", \"https://angular.io/\"],\n  [\"angularjs\", \"https://angularjs.org\"],\n  [\"bedrock\", \"https://aws.amazon.com/bedrock/\"],\n  [\"dart\", \"http://dart.dev\"],\n  [\"golang\", \"https://go.dev\"],\n  [\"google-cloud-platform\", \"https://cloud.google.com/\"],\n  [\"google-compute-engine\", \"https://cloud.google.com/compute\"],\n  [\"graphql\", \"https://graphql.org/\"],\n  [\"istio\", \"https://istio.io\"],\n  [\"kompose\", \"https://kompose.io/\"],\n  [\"kubernetes\", \"https://kubernetes.io\"],\n  [\"mit-scratch\", \"https://scratch.mit.edu\"],\n  [\"node.js\", \"https://nodejs.org\"],\n  [\"nodejs\", \"https://nodejs.org\"],\n  [\"python\", \"https://www.python.org\"],\n  [\"react\", \"https://react.dev/\"],\n  [\"redis\", \"redis.io\"],\n  [\"rust\", \"https://rust-lang.org\"],\n  [\"socket.io\", \"https://socket.io\"],\n  [\"typescript\", \"https://www.typescriptlang.org/\"],\n]);\n\nconst Competences = ({\n  competences = [],\n}: {\n  competences?: ResumeTypes.Competence[];\n}) => (\n  <ul>\n    {competences.map(({ name }) => (\n      <li key={name}>\n        <A href={COMPETENCES_MAP.get(name.toLowerCase())}>\n          {COMPETENCES_LCL.get(name.toLowerCase()) ?? `${name}`}\n        </A>\n      </li>\n    ))}\n  </ul>\n);\n"],"names":["Card","className","header","children","footer","article","h3","main","Contact","contact","links","allLinks","publicProfiles","contactMails","map","type","URL","p","phoneNumbers","countryCode","number","Links","aboutMe","hgroup","h1","Link","href","profile","name","surnames","h2","title","avatar","Avatar","location","Location","relevantLinks","figure","Image","height","width","alt","src","link","mediaType","data","style","maxWidth","Object","entries","k","v","span","nav","ul","li","a","Layout","div","id","Head","meta","content","AboutMe","resume","Date","getFullYear","cite","parseInfo","info","spec","undefined","tag","classes","attributes","idx","state","attr","value","transition","next","push","length","charAt","sort","renderInfo","join","attrs","TOKEN_TYPE","isHtmlEntity","HTML_ENTITIES","KNOWN_ENTITIES","Map","RegisterEntitiesName","LookupEntitiesName","REFERENCES","MOVED","Set","ReferencesName","SectionsName","marked","Marked","use","references","renderer","heading","token","tokens","depth","text","parser","parseInline","extensions","has","parse","level","start","indexOf","tokenizer","match","raw","reference","groups","ref","findReference","replace","add","get","walkTokens","set","blockInfo","index","leader","trim","lexer","blockTokens","inline","innerTokens","inlineTokens","image","classname","entities","MD","body","useMemo","toHTML","replaceWalkTokens","clear","_walkTokens","walkTokensToBuildSections","callback","slugger","Slugger","values","call","stack","i","popSection","section","pop","at","splice","pos","pushSection","slug","md","dangerouslySetInnerHTML","__html","Organization","org","h4","job","hide","show","date","Number","SHOW_JOBS_SINCE","substring","roles","finishDate","organization","Role","role","h5","em","small","startDate","challenges","description","Competences","competences","COMPETENCES_LCL","A","COMPETENCES_MAP","toLowerCase"],"sourceRoot":"","ignoreList":[]}